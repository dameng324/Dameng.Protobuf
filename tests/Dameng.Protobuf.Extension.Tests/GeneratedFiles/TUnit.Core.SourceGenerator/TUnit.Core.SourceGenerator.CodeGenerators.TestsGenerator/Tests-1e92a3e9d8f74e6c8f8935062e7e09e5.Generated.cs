// <auto-generated/>
#pragma warning disable
using global::System.Linq;
using global::System.Reflection;
using global::TUnit.Core;
using global::TUnit.Core.Extensions;

namespace TUnit.SourceGenerated;

[global::System.Diagnostics.StackTraceHidden]
[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
file partial class Tests : global::TUnit.Core.Interfaces.SourceGenerator.ITestSource
{
	[global::System.Runtime.CompilerServices.ModuleInitializer]
	public static void Initialise()
	{
		global::TUnit.Core.SourceRegistrar.Register(new Tests());
	}
	public global::System.Collections.Generic.IReadOnlyList<TestMetadata> CollectTests(string sessionId)
	{
		return Tests0(sessionId);
	}
	private global::System.Collections.Generic.List<TestMetadata> Tests0(string sessionId)
	{
		global::System.Collections.Generic.List<TestMetadata> nodes = [];
		var classDataIndex = 0;
		var testMethodDataIndex = 0;
		try
		{
			var testInformation = new global::TUnit.Core.SourceGeneratedMethodInformation
			{
				Type = typeof(global::Dameng.Protobuf.Extension.Tests.Tests),
				Name = "LocalToGoogle",
				GenericTypeCount = 0,
				ReturnType = typeof(void),
				Attributes = 
				[
					new global::TUnit.Core.TestAttribute()
				],
				Parameters = [],
				Class = global::TUnit.Core.SourceGeneratedClassInformation.GetOrAdd("global::Dameng.Protobuf.Extension.Tests.Tests", () => new global::TUnit.Core.SourceGeneratedClassInformation
				{
					Parent = null,
					Type = typeof(global::Dameng.Protobuf.Extension.Tests.Tests),
					Assembly = global::TUnit.Core.SourceGeneratedAssemblyInformation.GetOrAdd("Dameng.Protobuf.Extension.Tests", () => new global::TUnit.Core.SourceGeneratedAssemblyInformation
					{
						Name = "Dameng.Protobuf.Extension.Tests",
						Attributes = 
						[
							new global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v8.0")
							{
								FrameworkDisplayName = ".NET 8.0",
},
								new global::System.Reflection.AssemblyCompanyAttribute("Dameng.Protobuf.Extension.Tests"),
								new global::System.Reflection.AssemblyConfigurationAttribute("Debug"),
								new global::System.Reflection.AssemblyFileVersionAttribute("1.0.0.0"),
								new global::System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+ca8f47556d5d91eee0743da875f8356c21eb5423"),
								new global::System.Reflection.AssemblyProductAttribute("Dameng.Protobuf.Extension.Tests"),
								new global::System.Reflection.AssemblyTitleAttribute("Dameng.Protobuf.Extension.Tests"),
								new global::System.Reflection.AssemblyVersionAttribute("1.0.0.0"),
								new global::System.Reflection.AssemblyMetadataAttribute("Microsoft.Testing.Platform.Application", "true")
							],
						}),
						Name = "Tests",
						Namespace = "Dameng.Protobuf.Extension.Tests",
						Attributes = [],
						Parameters = [],
						Properties = [],
					}),
};

					var testBuilderContext = new global::TUnit.Core.TestBuilderContext();
					var testBuilderContextAccessor = new global::TUnit.Core.TestBuilderContextAccessor(testBuilderContext);
					global::Dameng.Protobuf.Extension.Tests.Tests? classInstance = null;
					object?[]? classInstanceArguments = null;
					classInstanceArguments = [];

					var resettableClassFactoryDelegate = () => new ResettableLazy<global::Dameng.Protobuf.Extension.Tests.Tests>(() => 
					new global::Dameng.Protobuf.Extension.Tests.Tests()
					, sessionId, testBuilderContext);
					var resettableClassFactory = resettableClassFactoryDelegate();


					nodes.Add(new TestMetadata<global::Dameng.Protobuf.Extension.Tests.Tests>
					{
						TestId = $"Dameng.Protobuf.Extension.Tests.Tests.LocalToGoogle:0",
						TestClassArguments = [],
						TestMethodArguments = [],
						TestClassProperties = new global::System.Collections.Generic.Dictionary<string, object?>
						{
						},
						CurrentRepeatAttempt = 0,
						RepeatLimit = 0,
						ResettableClassFactory = resettableClassFactory,
						TestMethodFactory = (classInstance, cancellationToken) => AsyncConvert.Convert(() => classInstance.LocalToGoogle()),
						TestFilePath = @"/home/runner/work/Dameng.Protobuf.Extension/Dameng.Protobuf.Extension/tests/Dameng.Protobuf.Extension.Tests/Tests.cs",
						TestLineNumber = 13,
						TestMethod = testInformation,
						TestBuilderContext = testBuilderContext,
					});
					resettableClassFactory = resettableClassFactoryDelegate();
					testBuilderContext = new();
					testBuilderContextAccessor.Current = testBuilderContext;
				}
				catch (global::System.Exception exception)
				{
					nodes.Add(new FailedTestMetadata<global::Dameng.Protobuf.Extension.Tests.Tests>
					{
						TestId = $"Dameng.Protobuf.Extension.Tests.Tests.LocalToGoogle:0",
						MethodName = $"LocalToGoogle",
						Exception = new TUnit.Core.Exceptions.TestFailedInitializationException("Tests.LocalToGoogle failed to initialize", exception),
						TestFilePath = @"/home/runner/work/Dameng.Protobuf.Extension/Dameng.Protobuf.Extension/tests/Dameng.Protobuf.Extension.Tests/Tests.cs",
						TestLineNumber = 13,
					});
				}
				return nodes;
			}
		}
