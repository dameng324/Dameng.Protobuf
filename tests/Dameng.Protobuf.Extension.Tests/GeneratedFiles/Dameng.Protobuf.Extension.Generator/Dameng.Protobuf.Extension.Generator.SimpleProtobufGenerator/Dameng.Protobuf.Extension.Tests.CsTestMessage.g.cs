// <auto-generated>
//     Generated by SimpleProtobufGenerator at 2025-09-04 12:17:02
// </auto-generated>

#pragma warning disable 1591, 0612, 3021, 8981, CS9035
using System;
using System.Linq;
using Dameng.Protobuf.Extension;
using Google.Protobuf.WellKnownTypes;
using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dameng.Protobuf.Extension.Tests;
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
partial class CsTestMessage : pb::IMessage<CsTestMessage>,IPbMessageParser<CsTestMessage>, pb::IBufferMessage
{
    private pb::UnknownFieldSet _unknownFields;
    public static pb::MessageParser<CsTestMessage> Parser { get; }=new pb::MessageParser<CsTestMessage>(() => new CsTestMessage() { StringField = string.Empty, Int32Field = default(int) });
    pbr::MessageDescriptor pb::IMessage.Descriptor => null;

    [global::System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute]
    public CsTestMessage() 
    {
        StringField = string.Empty;
        Int32Field = default(int);
        Int32ArrayField = new Google.Protobuf.Collections.RepeatedField<int>();
        StringArrayField = new Google.Protobuf.Collections.RepeatedField<string>();
        BytesField = pb.ByteString.Empty;
        BoolField = default(bool);
        DoubleField = default(double);
        FloatField = default(float);
        Int64Field = default(long);
        UInt32Field = default(uint);
        UInt64Field = default(ulong);
        SInt32Field = default(int);
        SInt64Field = default(long);
        Fixed32Field = default(uint);
        Fixed64Field = default(ulong);
        SFixed32Field = default(int);
        SFixed64Field = default(long);
        MapField = new Google.Protobuf.Collections.MapField<string, string>();
        EnumField = default(Dameng.Protobuf.Extension.Tests.CsTestEnum);
        EnumArrayField = new Google.Protobuf.Collections.RepeatedField<Dameng.Protobuf.Extension.Tests.CsTestEnum>();
        NestedMessageField = null;
        NestedMessageArrayField = new Google.Protobuf.Collections.RepeatedField<Dameng.Protobuf.Extension.Tests.CsTestMessage>();
        TimestampField = null;
        DurationField = null;
        MapField2 = new System.Collections.Generic.Dictionary<string, string>();
        MapField3 = new System.Collections.Concurrent.ConcurrentDictionary<string, string>();
        BoolField31 = default(bool);
        BoolField32 = default(bool);
        BoolField33 = default(bool);
        BoolField34 = default(bool);
        BoolField35 = default(bool);
        BoolField36 = default(bool);
        BoolField37 = default(bool);
        BoolField38 = default(bool);
        BoolField39 = default(bool);
        BoolField41 = default(bool);
        BoolField42 = default(bool);
        BoolField43 = default(bool);
        BoolField44 = default(bool);
        BoolField45 = default(bool);
        BoolField46 = default(bool);
        BoolField47 = default(bool);
        BoolField48 = default(bool);
        BoolField49 = default(bool);
        MapField4 = new Google.Protobuf.Collections.MapField<int, long>();
        DateTimeField = default(System.DateTime);
        NullableIntField = null;
        IntArrayFieldTest = System.Array.Empty<int>();
        StringListFieldTest = new System.Collections.Generic.List<string>();
        StringArrayFieldTest = System.Array.Empty<string>();
        IntListFieldTest = new System.Collections.Generic.List<int>();
        MapField5 = new System.Collections.Generic.Dictionary<string, string>();
        MapField6 = new System.Collections.Generic.Dictionary<string, string>();
        RequiredIntField = default(int);
        _unknownFields = null;
        OnConstruction();
    }
    partial void OnConstruction();
    
    [global::System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute]
    public CsTestMessage(CsTestMessage other)
    {
        StringField = other.StringField;
        Int32Field = other.Int32Field;
        Int32ArrayField = other.Int32ArrayField.Clone();
        StringArrayField = other.StringArrayField.Clone();
        BytesField = other.BytesField;
        BoolField = other.BoolField;
        DoubleField = other.DoubleField;
        FloatField = other.FloatField;
        Int64Field = other.Int64Field;
        UInt32Field = other.UInt32Field;
        UInt64Field = other.UInt64Field;
        SInt32Field = other.SInt32Field;
        SInt64Field = other.SInt64Field;
        Fixed32Field = other.Fixed32Field;
        Fixed64Field = other.Fixed64Field;
        SFixed32Field = other.SFixed32Field;
        SFixed64Field = other.SFixed64Field;
        MapField = other.MapField.Clone();
        EnumField = other.EnumField;
        EnumArrayField = other.EnumArrayField.Clone();
        NestedMessageField = other.NestedMessageField?.Clone();
        NestedMessageArrayField = other.NestedMessageArrayField.Clone();
        TimestampField = other.TimestampField?.Clone();
        DurationField = other.DurationField?.Clone();
        MapField2 = other.MapField2 == null ? new System.Collections.Generic.Dictionary<string, string>() : new System.Collections.Generic.Dictionary<string, string>(other.MapField2);
        MapField3 = other.MapField3 == null ? new System.Collections.Concurrent.ConcurrentDictionary<string, string>() : new System.Collections.Concurrent.ConcurrentDictionary<string, string>(other.MapField3);
        BoolField31 = other.BoolField31;
        BoolField32 = other.BoolField32;
        BoolField33 = other.BoolField33;
        BoolField34 = other.BoolField34;
        BoolField35 = other.BoolField35;
        BoolField36 = other.BoolField36;
        BoolField37 = other.BoolField37;
        BoolField38 = other.BoolField38;
        BoolField39 = other.BoolField39;
        BoolField41 = other.BoolField41;
        BoolField42 = other.BoolField42;
        BoolField43 = other.BoolField43;
        BoolField44 = other.BoolField44;
        BoolField45 = other.BoolField45;
        BoolField46 = other.BoolField46;
        BoolField47 = other.BoolField47;
        BoolField48 = other.BoolField48;
        BoolField49 = other.BoolField49;
        MapField4 = other.MapField4.Clone();
        DateTimeField = other.DateTimeField;
        NullableIntField = other.NullableIntField;
        IntArrayFieldTest = other.IntArrayFieldTest == null ? System.Array.Empty<int>() : ((int[])other.IntArrayFieldTest.Clone());
        StringListFieldTest = other.StringListFieldTest == null ? new System.Collections.Generic.List<string>() : new System.Collections.Generic.List<string>(other.StringListFieldTest);
        StringArrayFieldTest = other.StringArrayFieldTest == null ? System.Array.Empty<string>() : ((string[])other.StringArrayFieldTest.Clone());
        IntListFieldTest = other.IntListFieldTest == null ? new System.Collections.Generic.List<int>() : new System.Collections.Generic.List<int>(other.IntListFieldTest);
        MapField5 = other.MapField5 == null ? new System.Collections.Generic.Dictionary<string, string>() : new System.Collections.Generic.Dictionary<string, string>(other.MapField5);
        MapField6 = other.MapField6 == null ? new System.Collections.Generic.Dictionary<string, string>() : new System.Collections.Generic.Dictionary<string, string>(other.MapField6);
        RequiredIntField = other.RequiredIntField;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }
    
    
    public CsTestMessage Clone() => new CsTestMessage(this);
    
    public override bool Equals(object other)=>Equals(other as CsTestMessage);
    public bool Equals(CsTestMessage other)
    {
        if (ReferenceEquals(other, null)) return false;
        if (ReferenceEquals(other, this)) return true;
        if (StringField.Equals(other.StringField)==false) return false;
        if (Int32Field.Equals(other.Int32Field)==false) return false;
        if (Int32ArrayField.Equals(other.Int32ArrayField)==false) return false;
        if (StringArrayField.Equals(other.StringArrayField)==false) return false;
        if (BytesField.Equals(other.BytesField)==false) return false;
        if (BoolField.Equals(other.BoolField)==false) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleField, other.DoubleField)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FloatField, other.FloatField)) return false;
        if (Int64Field.Equals(other.Int64Field)==false) return false;
        if (UInt32Field.Equals(other.UInt32Field)==false) return false;
        if (UInt64Field.Equals(other.UInt64Field)==false) return false;
        if (SInt32Field.Equals(other.SInt32Field)==false) return false;
        if (SInt64Field.Equals(other.SInt64Field)==false) return false;
        if (Fixed32Field.Equals(other.Fixed32Field)==false) return false;
        if (Fixed64Field.Equals(other.Fixed64Field)==false) return false;
        if (SFixed32Field.Equals(other.SFixed32Field)==false) return false;
        if (SFixed64Field.Equals(other.SFixed64Field)==false) return false;
        if (MapField.Equals(other.MapField)==false) return false;
        if (EnumField.Equals(other.EnumField)==false) return false;
        if (EnumArrayField.Equals(other.EnumArrayField)==false) return false;
        if (NestedMessageField.Equals(other.NestedMessageField)==false) return false;
        if (NestedMessageArrayField.Equals(other.NestedMessageArrayField)==false) return false;
        if (TimestampField.Equals(other.TimestampField)==false) return false;
        if (DurationField.Equals(other.DurationField)==false) return false;
        if (MapField2 == null && other.MapField2 == null) { } else if (MapField2 == null || other.MapField2 == null) return false; else if (MapField2.Count != other.MapField2.Count) return false; else if (!MapField2.All(kvp => other.MapField2.ContainsKey(kvp.Key) && EqualityComparer<object>.Default.Equals(kvp.Value, other.MapField2[kvp.Key]))) return false;
        if (MapField3 == null && other.MapField3 == null) { } else if (MapField3 == null || other.MapField3 == null) return false; else if (MapField3.Count != other.MapField3.Count) return false; else if (!MapField3.All(kvp => other.MapField3.ContainsKey(kvp.Key) && EqualityComparer<object>.Default.Equals(kvp.Value, other.MapField3[kvp.Key]))) return false;
        if (BoolField31.Equals(other.BoolField31)==false) return false;
        if (BoolField32.Equals(other.BoolField32)==false) return false;
        if (BoolField33.Equals(other.BoolField33)==false) return false;
        if (BoolField34.Equals(other.BoolField34)==false) return false;
        if (BoolField35.Equals(other.BoolField35)==false) return false;
        if (BoolField36.Equals(other.BoolField36)==false) return false;
        if (BoolField37.Equals(other.BoolField37)==false) return false;
        if (BoolField38.Equals(other.BoolField38)==false) return false;
        if (BoolField39.Equals(other.BoolField39)==false) return false;
        if (BoolField41.Equals(other.BoolField41)==false) return false;
        if (BoolField42.Equals(other.BoolField42)==false) return false;
        if (BoolField43.Equals(other.BoolField43)==false) return false;
        if (BoolField44.Equals(other.BoolField44)==false) return false;
        if (BoolField45.Equals(other.BoolField45)==false) return false;
        if (BoolField46.Equals(other.BoolField46)==false) return false;
        if (BoolField47.Equals(other.BoolField47)==false) return false;
        if (BoolField48.Equals(other.BoolField48)==false) return false;
        if (BoolField49.Equals(other.BoolField49)==false) return false;
        if (MapField4.Equals(other.MapField4)==false) return false;
        if (DateTimeField.Equals(other.DateTimeField)==false) return false;
        if (!NullableIntField.Equals(other.NullableIntField)) return false;
        if (!System.Linq.Enumerable.SequenceEqual(IntArrayFieldTest, other.IntArrayFieldTest)) return false;
        if (!System.Linq.Enumerable.SequenceEqual(StringListFieldTest, other.StringListFieldTest)) return false;
        if (!System.Linq.Enumerable.SequenceEqual(StringArrayFieldTest, other.StringArrayFieldTest)) return false;
        if (!System.Linq.Enumerable.SequenceEqual(IntListFieldTest, other.IntListFieldTest)) return false;
        if (MapField5 == null && other.MapField5 == null) { } else if (MapField5 == null || other.MapField5 == null) return false; else if (MapField5.Count != other.MapField5.Count) return false; else if (!MapField5.All(kvp => other.MapField5.ContainsKey(kvp.Key) && EqualityComparer<object>.Default.Equals(kvp.Value, other.MapField5[kvp.Key]))) return false;
        if (MapField6 == null && other.MapField6 == null) { } else if (MapField6 == null || other.MapField6 == null) return false; else if (MapField6.Count != other.MapField6.Count) return false; else if (!MapField6.All(kvp => other.MapField6.ContainsKey(kvp.Key) && EqualityComparer<object>.Default.Equals(kvp.Value, other.MapField6[kvp.Key]))) return false;
        if (RequiredIntField.Equals(other.RequiredIntField)==false) return false;
        return Equals(_unknownFields, other._unknownFields);
    }
    public override int GetHashCode()
    {
        int hash = 1;
        if (StringField.Length !=0) hash ^= StringField.GetHashCode();
        if (Int32Field != default) hash ^= Int32Field.GetHashCode();
        hash ^= Int32ArrayField.GetHashCode();
        hash ^= StringArrayField.GetHashCode();
        if (BytesField.Length !=0) hash ^= BytesField.GetHashCode();
        if (BoolField != default) hash ^= BoolField.GetHashCode();
        if (DoubleField != default)  hash ^=(pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleField));
        if (FloatField != default)  hash ^=(pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FloatField));
        if (Int64Field != default) hash ^= Int64Field.GetHashCode();
        if (UInt32Field != default) hash ^= UInt32Field.GetHashCode();
        if (UInt64Field != default) hash ^= UInt64Field.GetHashCode();
        if (SInt32Field != default) hash ^= SInt32Field.GetHashCode();
        if (SInt64Field != default) hash ^= SInt64Field.GetHashCode();
        if (Fixed32Field != default) hash ^= Fixed32Field.GetHashCode();
        if (Fixed64Field != default) hash ^= Fixed64Field.GetHashCode();
        if (SFixed32Field != default) hash ^= SFixed32Field.GetHashCode();
        if (SFixed64Field != default) hash ^= SFixed64Field.GetHashCode();
        hash ^= MapField.GetHashCode();
        if (EnumField != default) hash ^= EnumField.GetHashCode();
        hash ^= EnumArrayField.GetHashCode();
        if (NestedMessageField != null) hash ^= NestedMessageField.GetHashCode();
        hash ^= NestedMessageArrayField.GetHashCode();
        if (TimestampField != null) hash ^= TimestampField.GetHashCode();
        if (DurationField != null) hash ^= DurationField.GetHashCode();
        if (MapField2 != null && MapField2.Count > 0) { foreach(var kvp in MapField2) hash ^= kvp.Key?.GetHashCode() ?? 0 ^ kvp.Value?.GetHashCode() ?? 0; }
        if (MapField3 != null && MapField3.Count > 0) { foreach(var kvp in MapField3) hash ^= kvp.Key?.GetHashCode() ?? 0 ^ kvp.Value?.GetHashCode() ?? 0; }
        if (BoolField31 != default) hash ^= BoolField31.GetHashCode();
        if (BoolField32 != default) hash ^= BoolField32.GetHashCode();
        if (BoolField33 != default) hash ^= BoolField33.GetHashCode();
        if (BoolField34 != default) hash ^= BoolField34.GetHashCode();
        if (BoolField35 != default) hash ^= BoolField35.GetHashCode();
        if (BoolField36 != default) hash ^= BoolField36.GetHashCode();
        if (BoolField37 != default) hash ^= BoolField37.GetHashCode();
        if (BoolField38 != default) hash ^= BoolField38.GetHashCode();
        if (BoolField39 != default) hash ^= BoolField39.GetHashCode();
        if (BoolField41 != default) hash ^= BoolField41.GetHashCode();
        if (BoolField42 != default) hash ^= BoolField42.GetHashCode();
        if (BoolField43 != default) hash ^= BoolField43.GetHashCode();
        if (BoolField44 != default) hash ^= BoolField44.GetHashCode();
        if (BoolField45 != default) hash ^= BoolField45.GetHashCode();
        if (BoolField46 != default) hash ^= BoolField46.GetHashCode();
        if (BoolField47 != default) hash ^= BoolField47.GetHashCode();
        if (BoolField48 != default) hash ^= BoolField48.GetHashCode();
        if (BoolField49 != default) hash ^= BoolField49.GetHashCode();
        hash ^= MapField4.GetHashCode();
        if (DateTimeField != default) hash ^= DateTimeField.GetHashCode();
        if (NullableIntField.HasValue) hash ^= NullableIntField.Value.GetHashCode();
        if (IntArrayFieldTest != null && IntArrayFieldTest.Length > 0) { foreach(var item in IntArrayFieldTest) hash ^= item.GetHashCode(); }
        if (StringListFieldTest != null && StringListFieldTest.Count > 0) { foreach(var item in StringListFieldTest) hash ^= item?.GetHashCode() ?? 0; }
        if (StringArrayFieldTest != null && StringArrayFieldTest.Length > 0) { foreach(var item in StringArrayFieldTest) hash ^= item?.GetHashCode() ?? 0; }
        if (IntListFieldTest != null && IntListFieldTest.Count > 0) { foreach(var item in IntListFieldTest) hash ^= item.GetHashCode(); }
        if (MapField5 != null && MapField5.Count > 0) { foreach(var kvp in MapField5) hash ^= kvp.Key?.GetHashCode() ?? 0 ^ kvp.Value?.GetHashCode() ?? 0; }
        if (MapField6 != null && MapField6.Count > 0) { foreach(var kvp in MapField6) hash ^= kvp.Key?.GetHashCode() ?? 0 ^ kvp.Value?.GetHashCode() ?? 0; }
        if (RequiredIntField != default) hash ^= RequiredIntField.GetHashCode();
        if (_unknownFields != null) hash ^= _unknownFields.GetHashCode();
        return hash;
    }
    public override string ToString() => pb::JsonFormatter.ToDiagnosticString(this);
    
    private static readonly pb::FieldCodec<int> _Int32ArrayField_codec = pb::FieldCodec.ForInt32(26);
    private static readonly pb::FieldCodec<string> _StringArrayField_codec = pb::FieldCodec.ForString(34);
    private static readonly pbc::MapField<string, string>.Codec _MapField_codec = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 146);
    private static readonly pb::FieldCodec<Dameng.Protobuf.Extension.Tests.CsTestEnum> _EnumArrayField_codec = pb::FieldCodec.ForEnum(162,x => (int) x, x => (Dameng.Protobuf.Extension.Tests.CsTestEnum) x);
    private static readonly pb::FieldCodec<Dameng.Protobuf.Extension.Tests.CsTestMessage> _NestedMessageArrayField_codec = pb::FieldCodec.ForMessage(178,Dameng.Protobuf.Extension.Tests.CsTestMessage.Parser);
    private static readonly pbc::MapField<string, string>.Codec _MapField2_codec = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 234);
    private static readonly pbc::MapField<string, string>.Codec _MapField3_codec = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 242);
    private static readonly pbc::MapField<int, long>.Codec _MapField4_codec = new pbc::MapField<int, long>.Codec(pb::FieldCodec.ForSFixed32(13), pb::FieldCodec.ForSInt64(16), 402);
    private static readonly pb::FieldCodec<int> _IntArrayFieldTest_codec = pb::FieldCodec.ForInt32(426);
    private static readonly pb::FieldCodec<string> _StringListFieldTest_codec = pb::FieldCodec.ForString(434);
    private static readonly pb::FieldCodec<string> _StringArrayFieldTest_codec = pb::FieldCodec.ForString(442);
    private static readonly pb::FieldCodec<int> _IntListFieldTest_codec = pb::FieldCodec.ForInt32(450);
    private static readonly pbc::MapField<string, string>.Codec _MapField5_codec = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 458);
    private static readonly pbc::MapField<string, string>.Codec _MapField6_codec = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 466);
        
    public void WriteTo(pb::CodedOutputStream output) {
        output.WriteRawMessage(this);
    }
    
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) 
    {
        if (StringField.Length !=0) { output.WriteRawTag(10); output.WriteString(StringField);}
        if (Int32Field != default) { output.WriteRawTag(16); output.WriteInt32(Int32Field);}
        Int32ArrayField.WriteTo(ref output,_Int32ArrayField_codec);
        StringArrayField.WriteTo(ref output,_StringArrayField_codec);
        if (BytesField.Length !=0) {  output.WriteRawTag(42); output.WriteBytes(BytesField);}
        if (BoolField != default) { output.WriteRawTag(48); output.WriteBool(BoolField);}
        if (DoubleField != default) { output.WriteRawTag(57); output.WriteDouble(DoubleField);}
        if (FloatField != default) { output.WriteRawTag(69); output.WriteFloat(FloatField);}
        if (Int64Field != default) { output.WriteRawTag(72); output.WriteInt64(Int64Field);}
        if (UInt32Field != default) { output.WriteRawTag(80); output.WriteUInt32(UInt32Field);}
        if (UInt64Field != default) { output.WriteRawTag(88); output.WriteUInt64(UInt64Field);}
        if (SInt32Field != default) { output.WriteRawTag(96); output.WriteSInt32(SInt32Field);}
        if (SInt64Field != default) { output.WriteRawTag(104); output.WriteSInt64(SInt64Field);}
        if (Fixed32Field != default) { output.WriteRawTag(117); output.WriteFixed32(Fixed32Field);}
        if (Fixed64Field != default) { output.WriteRawTag(121); output.WriteFixed64(Fixed64Field);}
        if (SFixed32Field != default) { output.WriteRawTag(133, 1); output.WriteSFixed32(SFixed32Field);}
        if (SFixed64Field != default) { output.WriteRawTag(137, 1); output.WriteSFixed64(SFixed64Field);}
        MapField.WriteTo(ref output,_MapField_codec);
        if (EnumField != default) { output.WriteRawTag(152, 1); output.WriteEnum((int)EnumField);}
        EnumArrayField.WriteTo(ref output,_EnumArrayField_codec);
        if (NestedMessageField != null) {  output.WriteRawTag(170, 1); output.WriteMessage(NestedMessageField);}
        NestedMessageArrayField.WriteTo(ref output,_NestedMessageArrayField_codec);
        if (TimestampField != null) {  output.WriteRawTag(218, 1); output.WriteMessage(TimestampField);}
        if (DurationField != null) {  output.WriteRawTag(226, 1); output.WriteMessage(DurationField);}
        if (MapField2 != null) { var tempMap = new pbc::MapField<string, string>(); foreach(var kvp in MapField2) tempMap[kvp.Key] = kvp.Value; tempMap.WriteTo(ref output, _MapField2_codec); }
        if (MapField3 != null) { var tempMap = new pbc::MapField<string, string>(); foreach(var kvp in MapField3) tempMap[kvp.Key] = kvp.Value; tempMap.WriteTo(ref output, _MapField3_codec); }
        if (BoolField31 != default) { output.WriteRawTag(248, 1); output.WriteBool(BoolField31);}
        if (BoolField32 != default) { output.WriteRawTag(128, 2); output.WriteBool(BoolField32);}
        if (BoolField33 != default) { output.WriteRawTag(136, 2); output.WriteBool(BoolField33);}
        if (BoolField34 != default) { output.WriteRawTag(144, 2); output.WriteBool(BoolField34);}
        if (BoolField35 != default) { output.WriteRawTag(152, 2); output.WriteBool(BoolField35);}
        if (BoolField36 != default) { output.WriteRawTag(160, 2); output.WriteBool(BoolField36);}
        if (BoolField37 != default) { output.WriteRawTag(168, 2); output.WriteBool(BoolField37);}
        if (BoolField38 != default) { output.WriteRawTag(176, 2); output.WriteBool(BoolField38);}
        if (BoolField39 != default) { output.WriteRawTag(184, 2); output.WriteBool(BoolField39);}
        if (BoolField41 != default) { output.WriteRawTag(200, 2); output.WriteBool(BoolField41);}
        if (BoolField42 != default) { output.WriteRawTag(208, 2); output.WriteBool(BoolField42);}
        if (BoolField43 != default) { output.WriteRawTag(216, 2); output.WriteBool(BoolField43);}
        if (BoolField44 != default) { output.WriteRawTag(224, 2); output.WriteBool(BoolField44);}
        if (BoolField45 != default) { output.WriteRawTag(232, 2); output.WriteBool(BoolField45);}
        if (BoolField46 != default) { output.WriteRawTag(240, 2); output.WriteBool(BoolField46);}
        if (BoolField47 != default) { output.WriteRawTag(248, 2); output.WriteBool(BoolField47);}
        if (BoolField48 != default) { output.WriteRawTag(128, 3); output.WriteBool(BoolField48);}
        if (BoolField49 != default) { output.WriteRawTag(136, 3); output.WriteBool(BoolField49);}
        MapField4.WriteTo(ref output,_MapField4_codec);
        if (DateTimeField != default) { output.WriteRawTag(154, 3); output.WriteMessage(Google.Protobuf.WellKnownTypes.Timestamp.FromDateTime(DateTimeField));}
        if (NullableIntField.HasValue) { output.WriteRawTag(160, 3); output.WriteInt32(NullableIntField.Value);}
        if (IntArrayFieldTest != null) { var tempRepeated = new pbc::RepeatedField<int>(); tempRepeated.AddRange(IntArrayFieldTest); tempRepeated.WriteTo(ref output, _IntArrayFieldTest_codec); }
        if (StringListFieldTest != null) { var tempRepeated = new pbc::RepeatedField<string>(); tempRepeated.AddRange(StringListFieldTest); tempRepeated.WriteTo(ref output, _StringListFieldTest_codec); }
        if (StringArrayFieldTest != null) { var tempRepeated = new pbc::RepeatedField<string>(); tempRepeated.AddRange(StringArrayFieldTest); tempRepeated.WriteTo(ref output, _StringArrayFieldTest_codec); }
        if (IntListFieldTest != null) { var tempRepeated = new pbc::RepeatedField<int>(); tempRepeated.AddRange(IntListFieldTest); tempRepeated.WriteTo(ref output, _IntListFieldTest_codec); }
        if (MapField5 != null) { var tempMap = new pbc::MapField<string, string>(); foreach(var kvp in MapField5) tempMap[kvp.Key] = kvp.Value; tempMap.WriteTo(ref output, _MapField5_codec); }
        if (MapField6 != null) { var tempMap = new pbc::MapField<string, string>(); foreach(var kvp in MapField6) tempMap[kvp.Key] = kvp.Value; tempMap.WriteTo(ref output, _MapField6_codec); }
        if (RequiredIntField != default) { output.WriteRawTag(216, 3); output.WriteInt32(RequiredIntField);}
        if (_unknownFields != null)
        {
            _unknownFields.WriteTo(ref output);
        }
    }
    
    public int CalculateSize() {
        int size=0;
    
        if (StringField.Length !=0) size += 1 + pb::CodedOutputStream.ComputeStringSize(StringField);
        if (Int32Field != default) size += 1 + pb::CodedOutputStream.ComputeInt32Size(Int32Field);
        size += Int32ArrayField.CalculateSize(_Int32ArrayField_codec);
        size += StringArrayField.CalculateSize(_StringArrayField_codec);
        if (BytesField.Length !=0) size += 1 + pb::CodedOutputStream.ComputeBytesSize(BytesField);
        if (BoolField != default) size += 1 + pb::CodedOutputStream.ComputeBoolSize(BoolField);
        if (DoubleField != default) size += 1 + pb::CodedOutputStream.ComputeDoubleSize(DoubleField);
        if (FloatField != default) size += 1 + pb::CodedOutputStream.ComputeFloatSize(FloatField);
        if (Int64Field != default) size += 1 + pb::CodedOutputStream.ComputeInt64Size(Int64Field);
        if (UInt32Field != default) size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UInt32Field);
        if (UInt64Field != default) size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UInt64Field);
        if (SInt32Field != default) size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SInt32Field);
        if (SInt64Field != default) size += 1 + pb::CodedOutputStream.ComputeSInt64Size(SInt64Field);
        if (Fixed32Field != default) size += 1 + pb::CodedOutputStream.ComputeFixed32Size(Fixed32Field);
        if (Fixed64Field != default) size += 1 + pb::CodedOutputStream.ComputeFixed64Size(Fixed64Field);
        if (SFixed32Field != default) size += 2 + pb::CodedOutputStream.ComputeSFixed32Size(SFixed32Field);
        if (SFixed64Field != default) size += 2 + pb::CodedOutputStream.ComputeSFixed64Size(SFixed64Field);
        size += MapField.CalculateSize(_MapField_codec);
        if (EnumField != default) size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EnumField);
        size += EnumArrayField.CalculateSize(_EnumArrayField_codec);
        if (NestedMessageField != null) size += 2 + pb::CodedOutputStream.ComputeMessageSize(NestedMessageField);
        size += NestedMessageArrayField.CalculateSize(_NestedMessageArrayField_codec);
        if (TimestampField != null) size += 2 + pb::CodedOutputStream.ComputeMessageSize(TimestampField);
        if (DurationField != null) size += 2 + pb::CodedOutputStream.ComputeMessageSize(DurationField);
        if (MapField2 != null) { var tempMap = new pbc::MapField<string, string>(); foreach(var kvp in MapField2) tempMap[kvp.Key] = kvp.Value; size += tempMap.CalculateSize(_MapField2_codec); }
        if (MapField3 != null) { var tempMap = new pbc::MapField<string, string>(); foreach(var kvp in MapField3) tempMap[kvp.Key] = kvp.Value; size += tempMap.CalculateSize(_MapField3_codec); }
        if (BoolField31 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField31);
        if (BoolField32 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField32);
        if (BoolField33 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField33);
        if (BoolField34 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField34);
        if (BoolField35 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField35);
        if (BoolField36 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField36);
        if (BoolField37 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField37);
        if (BoolField38 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField38);
        if (BoolField39 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField39);
        if (BoolField41 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField41);
        if (BoolField42 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField42);
        if (BoolField43 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField43);
        if (BoolField44 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField44);
        if (BoolField45 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField45);
        if (BoolField46 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField46);
        if (BoolField47 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField47);
        if (BoolField48 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField48);
        if (BoolField49 != default) size += 2 + pb::CodedOutputStream.ComputeBoolSize(BoolField49);
        size += MapField4.CalculateSize(_MapField4_codec);
        if (DateTimeField != default) size += 2 + pb::CodedOutputStream.ComputeMessageSize(Google.Protobuf.WellKnownTypes.Timestamp.FromDateTime(DateTimeField));
        if (NullableIntField.HasValue) size += 2 + pb::CodedOutputStream.ComputeInt32Size(NullableIntField.Value);
        if (IntArrayFieldTest != null) { var tempRepeated = new pbc::RepeatedField<int>(); tempRepeated.AddRange(IntArrayFieldTest); size += tempRepeated.CalculateSize(_IntArrayFieldTest_codec); }
        if (StringListFieldTest != null) { var tempRepeated = new pbc::RepeatedField<string>(); tempRepeated.AddRange(StringListFieldTest); size += tempRepeated.CalculateSize(_StringListFieldTest_codec); }
        if (StringArrayFieldTest != null) { var tempRepeated = new pbc::RepeatedField<string>(); tempRepeated.AddRange(StringArrayFieldTest); size += tempRepeated.CalculateSize(_StringArrayFieldTest_codec); }
        if (IntListFieldTest != null) { var tempRepeated = new pbc::RepeatedField<int>(); tempRepeated.AddRange(IntListFieldTest); size += tempRepeated.CalculateSize(_IntListFieldTest_codec); }
        if (MapField5 != null) { var tempMap = new pbc::MapField<string, string>(); foreach(var kvp in MapField5) tempMap[kvp.Key] = kvp.Value; size += tempMap.CalculateSize(_MapField5_codec); }
        if (MapField6 != null) { var tempMap = new pbc::MapField<string, string>(); foreach(var kvp in MapField6) tempMap[kvp.Key] = kvp.Value; size += tempMap.CalculateSize(_MapField6_codec); }
        if (RequiredIntField != default) size += 2 + pb::CodedOutputStream.ComputeInt32Size(RequiredIntField);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
    }
    
    public void MergeFrom(CsTestMessage other)
    {
        if (other == null) return;
        if (other.StringField.Length != 0) StringField = other.StringField;
        if (other.Int32Field != default) Int32Field = other.Int32Field;
        Int32ArrayField.Add(other.Int32ArrayField);
        StringArrayField.Add(other.StringArrayField);
        if (other.BytesField.Length != 0) BytesField = other.BytesField;
        if (other.BoolField != default) BoolField = other.BoolField;
        if (other.DoubleField != default) DoubleField = other.DoubleField;
        if (other.FloatField != default) FloatField = other.FloatField;
        if (other.Int64Field != default) Int64Field = other.Int64Field;
        if (other.UInt32Field != default) UInt32Field = other.UInt32Field;
        if (other.UInt64Field != default) UInt64Field = other.UInt64Field;
        if (other.SInt32Field != default) SInt32Field = other.SInt32Field;
        if (other.SInt64Field != default) SInt64Field = other.SInt64Field;
        if (other.Fixed32Field != default) Fixed32Field = other.Fixed32Field;
        if (other.Fixed64Field != default) Fixed64Field = other.Fixed64Field;
        if (other.SFixed32Field != default) SFixed32Field = other.SFixed32Field;
        if (other.SFixed64Field != default) SFixed64Field = other.SFixed64Field;
        MapField.MergeFrom(other.MapField);
        if (other.EnumField != default) EnumField = other.EnumField;
        EnumArrayField.Add(other.EnumArrayField);
        if (other.NestedMessageField != null) { if (NestedMessageField==null) NestedMessageField=new Dameng.Protobuf.Extension.Tests.CsTestMessage(); NestedMessageField.MergeFrom(other.NestedMessageField);}
        NestedMessageArrayField.Add(other.NestedMessageArrayField);
        if (other.TimestampField != null) { if (TimestampField==null) TimestampField=new Google.Protobuf.WellKnownTypes.Timestamp(); TimestampField.MergeFrom(other.TimestampField);}
        if (other.DurationField != null) { if (DurationField==null) DurationField=new Google.Protobuf.WellKnownTypes.Duration(); DurationField.MergeFrom(other.DurationField);}
        if (other.MapField2 != null && other.MapField2.Count > 0) { if (MapField2 == null) MapField2 = new System.Collections.Generic.Dictionary<string, string>(); if (MapField2 is IDictionary<string, string> map) foreach(var kvp in other.MapField2) map[kvp.Key] = kvp.Value; }
        if (other.MapField3 != null && other.MapField3.Count > 0) { if (MapField3 == null) MapField3 = new System.Collections.Concurrent.ConcurrentDictionary<string, string>(); if (MapField3 is IDictionary<string, string> map) foreach(var kvp in other.MapField3) map[kvp.Key] = kvp.Value; }
        if (other.BoolField31 != default) BoolField31 = other.BoolField31;
        if (other.BoolField32 != default) BoolField32 = other.BoolField32;
        if (other.BoolField33 != default) BoolField33 = other.BoolField33;
        if (other.BoolField34 != default) BoolField34 = other.BoolField34;
        if (other.BoolField35 != default) BoolField35 = other.BoolField35;
        if (other.BoolField36 != default) BoolField36 = other.BoolField36;
        if (other.BoolField37 != default) BoolField37 = other.BoolField37;
        if (other.BoolField38 != default) BoolField38 = other.BoolField38;
        if (other.BoolField39 != default) BoolField39 = other.BoolField39;
        if (other.BoolField41 != default) BoolField41 = other.BoolField41;
        if (other.BoolField42 != default) BoolField42 = other.BoolField42;
        if (other.BoolField43 != default) BoolField43 = other.BoolField43;
        if (other.BoolField44 != default) BoolField44 = other.BoolField44;
        if (other.BoolField45 != default) BoolField45 = other.BoolField45;
        if (other.BoolField46 != default) BoolField46 = other.BoolField46;
        if (other.BoolField47 != default) BoolField47 = other.BoolField47;
        if (other.BoolField48 != default) BoolField48 = other.BoolField48;
        if (other.BoolField49 != default) BoolField49 = other.BoolField49;
        MapField4.MergeFrom(other.MapField4);
        if (other.DateTimeField != default) DateTimeField = other.DateTimeField;
        if (other.NullableIntField.HasValue) NullableIntField = other.NullableIntField;
        if (other.IntArrayFieldTest != null && other.IntArrayFieldTest.Length > 0) { var temp = new List<int>(); if (IntArrayFieldTest != null) temp.AddRange(IntArrayFieldTest); temp.AddRange(other.IntArrayFieldTest); IntArrayFieldTest = temp.ToArray(); }
        if (other.StringListFieldTest != null && other.StringListFieldTest.Count > 0) { if (StringListFieldTest == null) StringListFieldTest = new System.Collections.Generic.List<string>(); foreach(var item in other.StringListFieldTest) StringListFieldTest.Add(item); }
        if (other.StringArrayFieldTest != null && other.StringArrayFieldTest.Length > 0) { var temp = new List<string>(); if (StringArrayFieldTest != null) temp.AddRange(StringArrayFieldTest); temp.AddRange(other.StringArrayFieldTest); StringArrayFieldTest = temp.ToArray(); }
        if (other.IntListFieldTest != null && other.IntListFieldTest.Count > 0) { if (IntListFieldTest == null) IntListFieldTest = new System.Collections.Generic.List<int>(); foreach(var item in other.IntListFieldTest) IntListFieldTest.Add(item); }
        if (other.MapField5 != null && other.MapField5.Count > 0) { if (MapField5 == null) MapField5 = new System.Collections.Generic.Dictionary<string, string>(); if (MapField5 is IDictionary<string, string> map) foreach(var kvp in other.MapField5) map[kvp.Key] = kvp.Value; }
        if (other.MapField6 != null && other.MapField6.Count > 0) { if (MapField6 == null) MapField6 = new System.Collections.Generic.Dictionary<string, string>(); if (MapField6 is IDictionary<string, string> map) foreach(var kvp in other.MapField6) map[kvp.Key] = kvp.Value; }
        if (other.RequiredIntField != default) RequiredIntField = other.RequiredIntField;
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }
    public void MergeFrom(pb::CodedInputStream input) {
        input.ReadRawMessage(this);
    }
    
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {

        uint tag;
        while ((tag = input.ReadTag()) != 0) 
        {
            if ((tag & 7) == 4) {
              // Abort on any end group tag.
              return;
            }
            switch(tag) 
            {
                default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
                case 10:{StringField = input.ReadString();break;}
                case 16:{Int32Field = input.ReadInt32();break;}
                case 26: case 24: {Int32ArrayField.AddEntriesFrom(ref input,_Int32ArrayField_codec);break;}
                case 34: {StringArrayField.AddEntriesFrom(ref input,_StringArrayField_codec);break;}
                case 42:{BytesField = input.ReadBytes();break;}
                case 48:{BoolField = input.ReadBool();break;}
                case 57:{DoubleField = input.ReadDouble();break;}
                case 69:{FloatField = input.ReadFloat();break;}
                case 72:{Int64Field = input.ReadInt64();break;}
                case 80:{UInt32Field = input.ReadUInt32();break;}
                case 88:{UInt64Field = input.ReadUInt64();break;}
                case 96:{SInt32Field = input.ReadSInt32();break;}
                case 104:{SInt64Field = input.ReadSInt64();break;}
                case 117:{Fixed32Field = input.ReadFixed32();break;}
                case 121:{Fixed64Field = input.ReadFixed64();break;}
                case 133:{SFixed32Field = input.ReadSFixed32();break;}
                case 137:{SFixed64Field = input.ReadSFixed64();break;}
                case 146:{MapField.AddEntriesFrom(ref input,_MapField_codec);break;}
                case 152:{EnumField = (Dameng.Protobuf.Extension.Tests.CsTestEnum)input.ReadEnum();break;}
                case 162: case 160: {EnumArrayField.AddEntriesFrom(ref input,_EnumArrayField_codec);break;}
                case 170:{if (NestedMessageField==null) NestedMessageField=new Dameng.Protobuf.Extension.Tests.CsTestMessage(); input.ReadMessage(NestedMessageField);break;}
                case 178: {NestedMessageArrayField.AddEntriesFrom(ref input,_NestedMessageArrayField_codec);break;}
                case 218:{if (TimestampField==null) TimestampField=new Google.Protobuf.WellKnownTypes.Timestamp(); input.ReadMessage(TimestampField);break;}
                case 226:{if (DurationField==null) DurationField=new Google.Protobuf.WellKnownTypes.Duration(); input.ReadMessage(DurationField);break;}
                case 234:{ var tempMap = new pbc::MapField<string, string>(); tempMap.AddEntriesFrom(ref input, _MapField2_codec); if (MapField2 == null) MapField2 = new System.Collections.Generic.Dictionary<string, string>(); if (MapField2 is IDictionary<string, string> map) foreach(var kvp in tempMap) map[kvp.Key] = kvp.Value; break;}
                case 242:{ var tempMap = new pbc::MapField<string, string>(); tempMap.AddEntriesFrom(ref input, _MapField3_codec); if (MapField3 == null) MapField3 = new System.Collections.Concurrent.ConcurrentDictionary<string, string>(); if (MapField3 is IDictionary<string, string> map) foreach(var kvp in tempMap) map[kvp.Key] = kvp.Value; break;}
                case 248:{BoolField31 = input.ReadBool();break;}
                case 256:{BoolField32 = input.ReadBool();break;}
                case 264:{BoolField33 = input.ReadBool();break;}
                case 272:{BoolField34 = input.ReadBool();break;}
                case 280:{BoolField35 = input.ReadBool();break;}
                case 288:{BoolField36 = input.ReadBool();break;}
                case 296:{BoolField37 = input.ReadBool();break;}
                case 304:{BoolField38 = input.ReadBool();break;}
                case 312:{BoolField39 = input.ReadBool();break;}
                case 328:{BoolField41 = input.ReadBool();break;}
                case 336:{BoolField42 = input.ReadBool();break;}
                case 344:{BoolField43 = input.ReadBool();break;}
                case 352:{BoolField44 = input.ReadBool();break;}
                case 360:{BoolField45 = input.ReadBool();break;}
                case 368:{BoolField46 = input.ReadBool();break;}
                case 376:{BoolField47 = input.ReadBool();break;}
                case 384:{BoolField48 = input.ReadBool();break;}
                case 392:{BoolField49 = input.ReadBool();break;}
                case 402:{MapField4.AddEntriesFrom(ref input,_MapField4_codec);break;}
                case 410:{var timestamp = new Google.Protobuf.WellKnownTypes.Timestamp(); input.ReadMessage(timestamp); DateTimeField = timestamp.ToDateTime();break;}
                case 416:{NullableIntField = input.ReadInt32();break;}
                case 426: case 424:{ var tempRepeated = new pbc::RepeatedField<int>(); if (IntArrayFieldTest != null) tempRepeated.AddRange(IntArrayFieldTest); tempRepeated.AddEntriesFrom(ref input, _IntArrayFieldTest_codec); IntArrayFieldTest = tempRepeated.ToArray(); break;}
                case 434:{ var tempRepeated = new pbc::RepeatedField<string>(); if (StringListFieldTest != null) tempRepeated.AddRange(StringListFieldTest); tempRepeated.AddEntriesFrom(ref input, _StringListFieldTest_codec); if (StringListFieldTest == null) StringListFieldTest = new System.Collections.Generic.List<string>(); StringListFieldTest.Clear(); foreach(var item in tempRepeated) StringListFieldTest.Add(item); break;}
                case 442:{ var tempRepeated = new pbc::RepeatedField<string>(); if (StringArrayFieldTest != null) tempRepeated.AddRange(StringArrayFieldTest); tempRepeated.AddEntriesFrom(ref input, _StringArrayFieldTest_codec); StringArrayFieldTest = tempRepeated.ToArray(); break;}
                case 450: case 448:{ var tempRepeated = new pbc::RepeatedField<int>(); if (IntListFieldTest != null) tempRepeated.AddRange(IntListFieldTest); tempRepeated.AddEntriesFrom(ref input, _IntListFieldTest_codec); if (IntListFieldTest == null) IntListFieldTest = new System.Collections.Generic.List<int>(); IntListFieldTest.Clear(); foreach(var item in tempRepeated) IntListFieldTest.Add(item); break;}
                case 458:{ var tempMap = new pbc::MapField<string, string>(); tempMap.AddEntriesFrom(ref input, _MapField5_codec); if (MapField5 == null) MapField5 = new System.Collections.Generic.Dictionary<string, string>(); if (MapField5 is IDictionary<string, string> map) foreach(var kvp in tempMap) map[kvp.Key] = kvp.Value; break;}
                case 466:{ var tempMap = new pbc::MapField<string, string>(); tempMap.AddEntriesFrom(ref input, _MapField6_codec); if (MapField6 == null) MapField6 = new System.Collections.Generic.Dictionary<string, string>(); if (MapField6 is IDictionary<string, string> map) foreach(var kvp in tempMap) map[kvp.Key] = kvp.Value; break;}
                case 472:{RequiredIntField = input.ReadInt32();break;}
          }
      }
    }
}
